name: Docker Image Publishing

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*.*.*

  # Run tests for any PRs.
  pull_request:

  schedule:
    - cron: '0 6 * * *'

env:
  IMAGE_NAME: "readis"

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build --pull -f ./.docker/Dockerfile -t "${IMAGE_NAME}" ./.docker

      - name: Log into docker hub registry
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ github.actor }}" --password-stdin

      - name: Push latest image
        run: |
          IMAGE_ID="${{ github.actor }}/${IMAGE_NAME}"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo "IMAGE_ID: ${IMAGE_ID}"
          echo "VERSION: latest"

          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:latest"
          docker push "${IMAGE_ID}"

      - name: Push release image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE_ID="${{ github.actor }}/${IMAGE_NAME}"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Determine tag
          TAG=$(git describe --exact-match --tags 2> /dev/null | sed -e s/v//g)
          MAJOR=$(echo ${TAG} | cut -d'.' -f1)
          FEATURE=${MAJOR}.$(echo ${TAG} | cut -d'.' -f2)

          echo "IMAGE_ID: ${IMAGE_ID}"
          echo "VERSION: ${TAG}"

          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${TAG}"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${MAJOR}"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${FEATURE}"
          docker push "${IMAGE_ID}"

      - name: Log into github container registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Push latest image
        run: |
          IMAGE_ID="ghcr.io/${{ github.actor }}/${IMAGE_NAME}"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo "IMAGE_ID: ${IMAGE_ID}"
          echo "VERSION: latest"

          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:latest"
          docker push "${IMAGE_ID}"

      - name: Push release image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE_ID="ghcr.io/${{ github.actor }}/${IMAGE_NAME}"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Determine tag
          TAG=$(git describe --exact-match --tags 2> /dev/null | sed -e s/v//g)
          MAJOR=$(echo ${TAG} | cut -d'.' -f1)
          FEATURE=${MAJOR}.$(echo ${TAG} | cut -d'.' -f2)

          echo "IMAGE_ID: ${IMAGE_ID}"
          echo "VERSION: ${TAG}"

          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${TAG}"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${MAJOR}"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${FEATURE}"
          docker push "${IMAGE_ID}"

  release:
    needs:
      - push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract version
        id: data
        run: |
          # Strip git ref prefix from version
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_VERSION=$(echo $RELEASE_VERSION | sed -e 's/^v//')

          echo $RELEASE_VERSION
          echo "##[set-output name=version;]$RELEASE_VERSION"

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ steps.data.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}